{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sawa/Documents/code/s11-quete-642-optimisation-reactivite/web-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sawa/Documents/code/s11-quete-642-optimisation-reactivite/web-app/src/components/FilmList/Container.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query GetFilmsCurrentlyShowing {\\n    filmsCurrentlyShowing(offset: 0, limit: 15) {\\n      slug\\n      encryptedUrlId\\n      title\\n      scRating\\n      releaseDate\\n      directors\\n      description\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport FilmList from './FilmList';\nconst GET_FILMS_CURRENTLY_SHOWING = gql(_templateObject());\n\nconst FilmListContainer = () => React.createElement(Query, {\n  query: GET_FILMS_CURRENTLY_SHOWING,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return 'Loading...';\n  if (error || !data) return \"Error! \".concat(error && error.message);\n  return React.createElement(FilmList, {\n    films: data.filmsCurrentlyShowing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n});\n\nexport default FilmListContainer;","map":{"version":3,"sources":["/home/sawa/Documents/code/s11-quete-642-optimisation-reactivite/web-app/src/components/FilmList/Container.tsx"],"names":["React","gql","Query","FilmList","GET_FILMS_CURRENTLY_SHOWING","FilmListContainer","loading","error","data","message","filmsCurrentlyShowing"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,2BAA2B,GAAGH,GAAH,mBAAjC;;AAkBA,MAAMI,iBAA2B,GAAG,MAClC,oBAAC,KAAD;AAAa,EAAA,KAAK,EAAED,2BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEE,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC7B,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAK,IAAI,CAACC,IAAd,EAAoB,wBAAiBD,KAAK,IAAIA,KAAK,CAACE,OAAhC;AAEpB,SAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,IAAI,CAACE,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CANH,CADF;;AAWA,eAAeL,iBAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nimport FilmList from './FilmList';\n\nconst GET_FILMS_CURRENTLY_SHOWING = gql`\n  query GetFilmsCurrentlyShowing {\n    filmsCurrentlyShowing(offset: 0, limit: 15) {\n      slug\n      encryptedUrlId\n      title\n      scRating\n      releaseDate\n      directors\n      description\n    }\n  }\n`;\n\ntype Data = {\n  filmsCurrentlyShowing: Film[];\n};\n\nconst FilmListContainer: React.FC = () => (\n  <Query<Data> query={GET_FILMS_CURRENTLY_SHOWING}>\n    {({ loading, error, data }) => {\n      if (loading) return 'Loading...';\n      if (error || !data) return `Error! ${error && error.message}`;\n\n      return <FilmList films={data.filmsCurrentlyShowing} />;\n    }}\n  </Query>\n);\n\nexport default FilmListContainer;\n"]},"metadata":{},"sourceType":"module"}