{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sawa/Documents/code/s11-quete-642-optimisation-reactivite/web-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sawa/Documents/code/s11-quete-642-optimisation-reactivite/web-app/src/components/FilmDetailShowtimes/Container.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query GetFilmAndShowtimes($slug: ID!) {\\n    film(slug: $slug) {\\n      slug\\n      title\\n      releaseDate\\n      directors\\n      showtimeDays {\\n        dayFormatted\\n        cinemas {\\n          slug\\n          name\\n          showtimes {\\n            hourFormatted\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport FilmDetailShowtimes from './FilmDetailShowtimes';\nconst GET_FILM_WITH_SHOWTIMES = gql(_templateObject());\n\nconst FilmDetailShowtimesContainer = ({\n  slug\n}) => React.createElement(Query, {\n  query: GET_FILM_WITH_SHOWTIMES,\n  variables: {\n    slug\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return 'Loading...';\n  if (error || !data) return \"Error! \".concat(error && error.message);\n  return React.createElement(FilmDetailShowtimes, Object.assign({}, data.film, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n});\n\nexport default FilmDetailShowtimesContainer;","map":{"version":3,"sources":["/home/sawa/Documents/code/s11-quete-642-optimisation-reactivite/web-app/src/components/FilmDetailShowtimes/Container.tsx"],"names":["React","gql","Query","FilmDetailShowtimes","GET_FILM_WITH_SHOWTIMES","FilmDetailShowtimesContainer","slug","loading","error","data","message","film"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,MAAMC,uBAAuB,GAAGH,GAAH,mBAA7B;;AAyBA,MAAMI,4BAAwD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAC/D,oBAAC,KAAD;AAAa,EAAA,KAAK,EAAEF,uBAApB;AAA6C,EAAA,SAAS,EAAE;AAAEE,IAAAA;AAAF,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC7B,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAK,IAAI,CAACC,IAAd,EAAoB,wBAAiBD,KAAK,IAAIA,KAAK,CAACE,OAAhC;AAEpB,SAAO,oBAAC,mBAAD,oBAAyBD,IAAI,CAACE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CANH,CADF;;AAWA,eAAeN,4BAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport FilmDetailShowtimes from './FilmDetailShowtimes';\n\nconst GET_FILM_WITH_SHOWTIMES = gql`\n  query GetFilmAndShowtimes($slug: ID!) {\n    film(slug: $slug) {\n      slug\n      title\n      releaseDate\n      directors\n      showtimeDays {\n        dayFormatted\n        cinemas {\n          slug\n          name\n          showtimes {\n            hourFormatted\n          }\n        }\n      }\n    }\n  }\n`;\n\ntype Data = {\n  film: FilmWithShowtimeDays;\n};\n\nconst FilmDetailShowtimesContainer: React.FC<{ slug: string }> = ({ slug }) => (\n  <Query<Data> query={GET_FILM_WITH_SHOWTIMES} variables={{ slug }}>\n    {({ loading, error, data }) => {\n      if (loading) return 'Loading...';\n      if (error || !data) return `Error! ${error && error.message}`;\n\n      return <FilmDetailShowtimes {...data.film} />;\n    }}\n  </Query>\n);\n\nexport default FilmDetailShowtimesContainer;\n"]},"metadata":{},"sourceType":"module"}