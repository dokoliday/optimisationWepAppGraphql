{"ast":null,"code":"var _jsxFileName = \"/home/sawa/Documents/code/s11-quete-642-optimisation-reactivite/web-app/src/components/FilmDetailShowtimes/FilmDetailShowtimes.tsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Wrapper, Title, ReleaseYear, Directors, ShowtimesWrapper, ShowtimesTitle, FilmHeading, CinemaList, ShowtimeDayButton, ShowtimeDayButtonGroup, CinemaListElement, CinemaTitle, ShowtimesList, ShowtimesListElement } from './styled';\nimport { getYearFromDateString } from '../../utils';\n\nclass FilmDetailShowtimes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedDay: this.props.showtimeDays.length && this.props.showtimeDays[0]\n    };\n\n    this.selectDay = day => {\n      this.setState({\n        selectedDay: day\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          title = _this$props.title,\n          releaseDate = _this$props.releaseDate,\n          directors = _this$props.directors,\n          _this$props$showtimeD = _this$props.showtimeDays,\n          showtimeDays = _this$props$showtimeD === void 0 ? [] : _this$props$showtimeD;\n    const selectedDay = this.state.selectedDay;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(FilmHeading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, title), React.createElement(ReleaseYear, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" (\".concat(getYearFromDateString(releaseDate), \")\")), React.createElement(Directors, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, directors))), React.createElement(ShowtimesWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(ShowtimesTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"S\\xE9ances\"), selectedDay && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ShowtimeDayButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, showtimeDays.map(day => React.createElement(Fragment, {\n      key: day.dayFormatted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ShowtimeDayButton, {\n      selected: day.dayFormatted === selectedDay.dayFormatted,\n      onClick: () => this.selectDay(day),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, day.dayFormatted), ' '))), React.createElement(CinemaList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, selectedDay.cinemas.map(cinema => React.createElement(CinemaListElement, {\n      key: cinema.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CinemaTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, cinema.name), React.createElement(ShowtimesList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, cinema.showtimes.map(showtime => React.createElement(Fragment, {\n      key: showtime.hourFormatted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ShowtimesListElement, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, showtime.hourFormatted), ' ')))))))));\n  }\n\n}\n\nexport default FilmDetailShowtimes;","map":{"version":3,"sources":["/home/sawa/Documents/code/s11-quete-642-optimisation-reactivite/web-app/src/components/FilmDetailShowtimes/FilmDetailShowtimes.tsx"],"names":["React","Component","Fragment","Wrapper","Title","ReleaseYear","Directors","ShowtimesWrapper","ShowtimesTitle","FilmHeading","CinemaList","ShowtimeDayButton","ShowtimeDayButtonGroup","CinemaListElement","CinemaTitle","ShowtimesList","ShowtimesListElement","getYearFromDateString","FilmDetailShowtimes","state","selectedDay","props","showtimeDays","length","selectDay","day","setState","render","title","releaseDate","directors","map","dayFormatted","cinemas","cinema","slug","name","showtimes","showtime","hourFormatted"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {\n  Wrapper,\n  Title,\n  ReleaseYear,\n  Directors,\n  ShowtimesWrapper,\n  ShowtimesTitle,\n  FilmHeading,\n  CinemaList,\n  ShowtimeDayButton,\n  ShowtimeDayButtonGroup,\n  CinemaListElement,\n  CinemaTitle,\n  ShowtimesList,\n  ShowtimesListElement,\n} from './styled';\nimport { getYearFromDateString } from '../../utils';\n\nclass FilmDetailShowtimes extends Component<FilmWithShowtimeDays> {\n  state = {\n    selectedDay: this.props.showtimeDays.length && this.props.showtimeDays[0],\n  };\n\n  selectDay = (day: FilmShowtimeDay) => {\n    this.setState({ selectedDay: day });\n  };\n\n  render() {\n    const { title, releaseDate, directors, showtimeDays = [] } = this.props;\n    const { selectedDay } = this.state;\n\n    return (\n      <Fragment>\n        <Wrapper>\n          <FilmHeading>\n            <Title>{title}</Title>\n            <ReleaseYear>{` (${getYearFromDateString(\n              releaseDate\n            )})`}</ReleaseYear>\n            <Directors>{directors}</Directors>\n          </FilmHeading>\n        </Wrapper>\n        <ShowtimesWrapper>\n          <ShowtimesTitle>SÃ©ances</ShowtimesTitle>\n          {selectedDay && (\n            <Fragment>\n              <ShowtimeDayButtonGroup>\n                {showtimeDays.map(day => (\n                  <Fragment key={day.dayFormatted}>\n                    <ShowtimeDayButton\n                      selected={day.dayFormatted === selectedDay.dayFormatted}\n                      onClick={() => this.selectDay(day)}\n                    >\n                      {day.dayFormatted}\n                    </ShowtimeDayButton>{' '}\n                  </Fragment>\n                ))}\n              </ShowtimeDayButtonGroup>\n              <CinemaList>\n                {selectedDay.cinemas.map(cinema => (\n                  <CinemaListElement key={cinema.slug}>\n                    <CinemaTitle>{cinema.name}</CinemaTitle>\n                    <ShowtimesList>\n                      {cinema.showtimes.map(showtime => (\n                        <Fragment key={showtime.hourFormatted}>\n                          <ShowtimesListElement>\n                            {showtime.hourFormatted}\n                          </ShowtimesListElement>{' '}\n                        </Fragment>\n                      ))}\n                    </ShowtimesList>\n                  </CinemaListElement>\n                ))}\n              </CinemaList>\n            </Fragment>\n          )}\n        </ShowtimesWrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default FilmDetailShowtimes;\n"]},"metadata":{},"sourceType":"module"}